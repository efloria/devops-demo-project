pipeline {
  agent any

  parameters {
    string(name: 'build_version', defaultValue: 'v1.0', description: 'Build version to use for Docker image')
  }

  environment {
    DOCKER_IMAGE = "flocontainer/demo-java-app:${params.build_version}"
    SONAR_URL = "http://sonarqube:9000"
    GIT_REPO_NAME = "devops-demo-project"
    GIT_USER_NAME = "efloria"
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/efloria/devops-demo-project.git'
      }
    }

    stage('Build and Test') {
      steps {
        sh 'cd demo-java-app && mvn clean package'
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'Sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh "cd demo-java-app && mvn sonar:sonar -Dsonar.login=${SONAR_AUTH_TOKEN} -Dsonar.host.url=${SONAR_URL}"
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub2', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          sh """
            cd demo-java-app
            docker build -t ${DOCKER_IMAGE} .
            echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
            docker push ${DOCKER_IMAGE}
          """
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh """
            git config user.email "florianepee4@gmail.com"
            git config user.name "efloria"
            sed -i 's/tag: .*/tag: "${params.build_version}"/' helm/app/values.yaml
            git add helm/app/values.yaml
            git commit -m "Update deployment image to version ${params.build_version}" || echo "No changes to commit"
            git remote set-url origin https://efloria:${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git
            git push origin HEAD:main
          """
        }
      }
    }
  }
}
